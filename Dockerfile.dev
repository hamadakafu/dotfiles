# docker build -t sample-cpp -f Dockerfile.cpp.dev .
# docker run -i -t -v `pwd`:/app -p 8888:8888 --name sample-cpp.dev sample-cpp

FROM ubuntu

ENV DEBIAN_FRONTEND=noninteractive
ENV USER dummy
ENV PASSWORD password

RUN apt update && apt upgrade -y

RUN apt install -y --no-install-recommends \
  sudo man-db zsh curl unzip git ca-certificates \
	build-essential ninja-build gettext libtool-bin cmake g++ pkg-config \
  libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \
  libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev libpango1.0-dev

# locale
RUN apt install -y locales && locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8

# user
RUN useradd --user-group --create-home ${USER} --shell $(which zsh) \
  && gpasswd --add ${USER} sudo \
  && echo "${USER}:${PASSWORD}" | chpasswd

# homebrew
RUN echo "$USER ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
USER ${USER}
RUN NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

# homebrew -> install
RUN /home/linuxbrew/.linuxbrew/bin/brew install \
  ripgrep fd sheldon just zoxide direnv neovim exa bat

# homebrew
USER root
RUN sed -i '$d' /etc/sudoers

# dotfiles
RUN mkdir -p ~/Documents && mkdir -p ~/.config \
  && git clone https://github.com/hamadakafu/dotfiles ~/Documents/dotfiles

# dotfiles -> zsh
RUN ln -s ~/Documents/dotfiles/.zsh.d ~/
RUN ln -s ~/Documents/dotfiles/.zshenv.d ~/
RUN ln -s ~/Documents/dotfiles/.zshrc ~/.zshrc
RUN ln -s ~/Documents/dotfiles/.zshenv ~/.zshenv
SHELL ["/usr/bin/zsh", "-c"]

# dotfiles -> sheldon
RUN cd ~/Documents/dotfiles \
  && just ln-sheldon

# dotfiles -> asdf
RUN cd ~/Documents/dotfiles \
  && just install-asdf
RUN cd ~/Documents/dotfiles \
  && just install-asdf-plugins \
  && asdf install python latest \
  && asdf install nodejs latest \
  && asdf global python latest \
  && asdf global nodejs latest

# dotfiles -> neovim

RUN rm -rf ~/.config/nvim \
	&& ln -s ~/Documents/dotfiles/.config/nvim ~/.config \
  && nvim --headless +'UpdateRemotePlugin | exit'


WORKDIR /app
CMD zsh

