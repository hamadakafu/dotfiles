[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = 'BufRead'
hook_post_update = 'TSUpdate'
hook_source = """
source ~/.config/nvim/lua/plugins/nvim-treesitter.lua
"""
[[plugins]]
repo = 'p00f/nvim-ts-rainbow'
on_source = ['nvim-treesitter']


[[plugins]]
repo = 'ekalinin/Dockerfile.vim'
on_ft = ['Dockerfile']
hook_add = '''
'''

[[plugins]]
repo = 'dart-lang/dart-vim-plugin'
on_ft = ['dart']

[[plugins]]
# coqのライブラリ
repo = 'LumaKernel/coqpit.vim'
on_ft = ['coq']
hook_add = '''
function! MyCoqMaps()
  nnoremap <silent> <C-C>        :CoqLaunch<CR>
  nnoremap <silent> <Leader>j    :CoqNext<CR>
  nnoremap <silent> <Leader>k    :CoqBack<CR>
  nnoremap <silent> <Leader>l    :CoqToCursor<CR>
  nnoremap <silent> <Leader>G    :CoqToLast<CR>
  nnoremap <silent> <Leader>g    :CoqRerun<CR>
  nnoremap <silent> <Leader>t    :MoveToTop<CR>
  nnoremap <silent> <Leader><F5> :CoqRefresh<CR>

  nnoremap <Leader>compute :CoqQuery Compute .<Left>
  nnoremap <Leader>print :CoqQuery Print .<Left>
  nnoremap <Leader>check :CoqQuery Check .<Left>
  nnoremap <Leader>se :CoqQuery Search ().<Left><Left>
endfunction

augroup my_coq
  au!
  au FileType coq :call MyCoqMaps()
augroup END
'''

[[plugins]]
repo = 'ckipp01/stylua-nvim'
on_ft = ['lua']
# FIXME: coc-luaがformatterの設定に対応していないので一時的な処置
# 選択してformatする
hook_add = '''
function! MyStylua()
    luaeval('require("stylua-nvim").format_file()')
endfunction
augroup my_stylua
  autocmd!
  autocmd FileType lua setl formatexpr=MyStylua()
augroup END
'''
