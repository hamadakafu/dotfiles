# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node

### End of Zinit's installer chunk

zinit ice wait'!0'; zinit load zsh-users/zsh-syntax-highlighting
zinit ice wait'!0'; zinit load zsh-users/zsh-completions
zinit ice wait'!0'; zinit load zsh-users/zsh-autosuggestions
zinit ice wait'!0' pick"init.sh" ; zinit load b4b4r07/enhancd
zinit light zdharma/history-search-multi-word

zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# 環境変数
export LANG=ja_JP.UTF-8
export EDITOR=vim

# compinitは多分ここにはいらない時間かかるし
# autoload -Uz compinit
# compinit
autoload -Uz colors
colors

# histroy setting
# # plugin zaw
# source /Users/kafuhamada/zsh_plugin/zaw/zaw.zsh
# bindkey '^h' zaw-history
# # history search
bindkey '^P' history-beginning-search-backward
bindkey '^N' history-beginning-search-forward

# history no duplicate
setopt hist_ignore_dups
# history share
setopt share_history
# ヒストリに追加されるコマンド行が古いものと同じなら古いものを削除
setopt hist_ignore_all_dups
# スペースで始まるコマンド行はヒストリリストから削除
setopt hist_ignore_space
# ヒストリを呼び出してから実行する間に一旦編集可能
setopt hist_verify
# 余分な空白は詰めて記録
setopt hist_reduce_blanks
# 古いコマンドと同じものは無視
setopt hist_save_no_dups
# historyコマンドは履歴に登録しない
setopt hist_no_store
# 補完時にヒストリを自動的に展開
setopt hist_expand
# 履歴ファイルの保存先
export HISTFILE=${HOME}/.zsh_history
# メモリに保存される履歴の件数
export HISTSIZE=1000
# 履歴ファイルに保存される履歴の件数
export SAVEHIST=200000
# 重複を記録しない
setopt hist_ignore_dups
# 開始と終了を記録
setopt EXTENDED_HISTORY

# 補完で小文字でも大文字にマッチさせる
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
# ../ の後は今いるディレクトリを補完しない
zstyle ':completion:*' ignore-parents parent pwd ..
# sudo の後ろでコマンド名を補完する
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
# ps コマンドのプロセス名補完
zstyle ':completion:*:processes' command 'ps x -o pid,s,args'
# use cache
zstyle ':completion::complete:*' use-cache true

zstyle ':completion:*' verbose yes
zstyle ':completion:*' format '%B%d%b'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*' group-name ''

autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit

# mybin
export PATH="$HOME/mybin:$PATH"

# anyenv
export PATH="$HOME/.anyenv/bin:$PATH"
eval "$(anyenv init -)"

# cargo
export PATH="$HOME/.cargo/bin:$PATH"

# haskell
eval "$(stack --bash-completion-script stack)"
[ -f "/home/kafuhamada/.ghcup/env" ] && source "/home/kafuhamada/.ghcup/env" # ghcup-env

# kubernetes
source <(kubectl completion zsh)

# kind
KIND_COMP_FILE=/home/kafuhamada/.zprezto/modules/completion/external/src/_kind
if [[ -f "${KIND_COMP_FILE}" ]]; then
	echo "${KIND_COMP_FILE} exists."
else
  kind completion zsh > ${KIND_COMP_FILE}
fi

# krew
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"


### Alias
alias ll='ls -la --header --inode'
alias ls='exa'
unalias lt

alias cp='cp -i'
alias mv='mv -i'
alias mkdir='mkdir -p'

# sudo の後のコマンドでエイリアスを有効にする
alias sudo='sudo '

# kubernetes alias
alias k='kubectl'
alias kp='kube-prompt'
alias kn='kubens'
alias kx='kubectx'
# alias ks='kubeseal'

# cat -> bat
alias cat='bat'

# grep -> ripgrep
# spaceship themeと衝突するため可能性あり
alias grep='rg --hidden'

# find -> fd
alias find='fd --hidden'

# ps -> procs
alias ps='procs'

# diff -> delta
alias diff='delta'

# vim -> nvim
alias vim='nvim'

# terraform -> tf
alias tf='terraform'

# docker-compose
alias dc='docker-compose'

# tarコマンド毎回わからなくなるので
# alias tar='\tar -zcvf'
# alias untar='\tar -zxvf'

# trash
alias rm='trash'
alias rmtrash='trash-rm'

# curl
alias curl-detail='curl -kivL'
