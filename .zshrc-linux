# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# zinit installer
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
if [[ ! -f ${ZINIT_HOME}/zinit.zsh ]]; then
  mkdir -p "$(dirname $ZINIT_HOME)"
  git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

source "${ZINIT_HOME}/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

zinit ice wait'!0'; zinit load zsh-users/zsh-syntax-highlighting
zinit ice wait'!0'; zinit load zsh-users/zsh-completions
zinit ice wait'!0'; zinit load hamadakafu/zsh-completions
zinit ice wait'!0'; zinit load zsh-users/zsh-autosuggestions
zinit ice wait'!0' pick"init.sh" ; zinit load b4b4r07/enhancd
zinit light zdharma-continuum/history-search-multi-word

zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# 環境変数
export EDITOR=nvim
export VISUAL=nvim # edit-command-lineではEDITORではなくVISUALを使う

autoload -Uz colors
colors

# histroy setting
# # plugin zaw
# source /Users/kafuhamada/zsh_plugin/zaw/zaw.zsh
# bindkey '^h' zaw-history
# # history search
bindkey '^P' history-beginning-search-backward
bindkey '^N' history-beginning-search-forward
zle -N edit-command-line # zle -Nで関数をwidgetとして登録
bindkey '^X' edit-command-line # bindkeyでwidgetをbind

# history no duplicate
setopt hist_ignore_dups
# history share
setopt share_history
# ヒストリに追加されるコマンド行が古いものと同じなら古いものを削除
setopt hist_ignore_all_dups
# スペースで始まるコマンド行はヒストリリストから削除
setopt hist_ignore_space
# ヒストリを呼び出してから実行する間に一旦編集可能
setopt hist_verify
# 余分な空白は詰めて記録
setopt hist_reduce_blanks
# 古いコマンドと同じものは無視
setopt hist_save_no_dups
# historyコマンドは履歴に登録しない
setopt hist_no_store
# 補完時にヒストリを自動的に展開
setopt hist_expand
# 履歴ファイルの保存先
export HISTFILE=${HOME}/.zsh_history
# メモリに保存される履歴の件数
export HISTSIZE=1000
# 履歴ファイルに保存される履歴の件数
export SAVEHIST=200000
# 開始と終了を記録
setopt EXTENDED_HISTORY

# 補完で小文字でも大文字にマッチさせる
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
# ../ の後は今いるディレクトリを補完しない
zstyle ':completion:*' ignore-parents parent pwd ..
# sudo の後ろでコマンド名を補完する
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
# ps コマンドのプロセス名補完
zstyle ':completion:*:processes' command 'ps x -o pid,s,args'
# use cache
zstyle ':completion::complete:*' use-cache true

zstyle ':completion:*' verbose yes
zstyle ':completion:*' format '%B%d%b'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*' group-name ''

# mybin
export PATH="$HOME/mybin:$PATH"
export PATH="$HOME/myscripts:$PATH"

# asdf
. $HOME/.asdf/asdf.sh
fpath=(${ASDF_DIR}/completions $fpath)
export ASDF_GOLANG_DEFAULT_PACKAGES_FILE=$HOME/.default-golang-pkgs
export ASDF_PYTHON_DEFAULT_PACKAGES_FILE=$HOME/.default-python-packages
export ASDF_NPM_DEFAULT_PACKAGES_FILE=$HOME/.default-npm-packages

# cargo
export PATH="$HOME/.cargo/bin:$PATH"

# haskell
eval "$(stack --bash-completion-script stack)"
[ -f "${HOME}/.ghcup/env" ] && source "${HOME}/.ghcup/env" # ghcup-env

# kubernetes
source <(kubectl completion zsh)

# krew
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

# navi
_call_navi() {
  local selected
  if [ -n "$LBUFFER" ]; then
    if selected="$(printf "%s" "$(navi --print --fzf-overrides '--no-select-1' --query "${LBUFFER}" </dev/tty)")"; then
      LBUFFER="$selected"
    fi
  else
    if selected="$(printf "%s" "$(navi --print </dev/tty)")"; then
      LBUFFER="$selected"
    fi
  fi
  zle redisplay
}
zle -N _call_navi
bindkey '^g' _call_navi

# dart
export PATH="$PATH:/usr/lib/dart/bin"
export PATH="$PATH":"$HOME/.pub-cache/bin"
alias flutter='fvm flutter'

# sage math
export PATH="$HOME/Documents/SageMath/local/bin:$PATH"

# quartus prime edition lite
export PATH="$PATH:$HOME/intelFPGA_lite/20.1/quartus/bin"

# direnv
eval "$(direnv hook zsh)"

# zoxide
eval "$(zoxide init zsh)"

# heroku
# HEROKU_AC_ZSH_SETUP_PATH=${HOME}/.cache/heroku/autocomplete/zsh_setup
#   && test -f $HEROKU_AC_ZSH_SETUP_PATH
#   && source $HEROKU_AC_ZSH_SETUP_PATH;

pop-text(){
  local readonly TOOLBOX_AUTH=$(
    cat ~/GoogleDrive/.config/toolbox-basicauth.txt \
      | tr -d '\n' \
      | base64 --wrap=0)
  tmp=$(curl \
    -H "authorization: Basic ${TOOLBOX_AUTH}" \
    https://toolbox-web.herokuapp.com/texts/latest \
    | jq -r ".value")
  echo "copied: ${tmp}"
  echo -n "${tmp}" | xsel --clipboard
}
push-text() {
  local readonly TOOLBOX_AUTH=$(
    cat ~/GoogleDrive/.config/toolbox-basicauth.txt \
      | tr -d '\n' \
      | base64 --wrap=0)
  curl \
    -H "authorization: Basic ${TOOLBOX_AUTH}" \
    -H "content-type: application/json" \
    -X POST \
    -d '{"value": "'"$(xsel --clipboard -o)"'"}' \
  https://toolbox-web.herokuapp.com/texts
}


# Completions
autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit


### Alias
alias ll='ls -la --header --inode'
alias ls='exa'
alias l='ls'
unalias lt

alias cp='cp -i'
alias mv='mv -i'
alias mkdir='mkdir -p'

# sudo の後のコマンドでエイリアスを有効にする
alias sudo='sudo '

# kubernetes alias
alias k='kubectl'
alias kp='kube-prompt'
alias kn='kubens'
alias kx='kubectx'
# alias ks='kubeseal'

# cat -> bat
alias cat='bat'

# grep -> ripgrep
# spaceship themeと衝突するため可能性あり
alias grep='rg --hidden'

# find -> fd
alias find='fd --hidden'

# ps -> procs
alias ps='procs'

# diff -> delta
alias diff='delta'

# vim -> nvim
alias vim='nvim'

# terraform -> tf
alias tf='terraform'

# docker-compose
alias dc='docker-compose'

# tarコマンド毎回わからなくなるので
# alias tar='\tar -zcvf'
# alias untar='\tar -zxvf'

# trash
alias rm='trash'
alias rmtrash='trash-rm'

# curl
alias curl-detail='curl -kivL'

# lazydocker
# alias lzd='docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v /yourpath/config:/.config/jesseduffield/lazydocker lazyteam/lazydocker'
alias lzd='docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock lazyteam/lazydocker'

# xdg-open
alias open='xdg-open'

# PATHの重複を削除する
typeset -U PATH

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

