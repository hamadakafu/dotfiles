[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]] # カラースキーマ
repo = 'morhetz/gruvbox'
hook_add = '''
  " set background=dark
  " colorscheme 設定は source 後に行う必要があるので VimEnter で行う。
  " 但し Colorscheme イベントの発生が抑制されないよう nented を付ける。
  ""highlight Normal guibg=none ctermbg=none
  ""augroup colorscheme
  ""  autocmd!
  ""  " autocmd ColorScheme * highlight Comment ctermfg=250 guifg=#008800
  ""  autocmd VimEnter * nested colorscheme gruvbox

  ""augroup END
'''
[[plugins]]
repo = 'ulwlu/elly.vim'
[[plugins]]
repo = 'sainnhe/everforest'
[[plugins]]
repo = 'rakr/vim-one'
[[plugins]]
repo = 'arcticicestudio/nord-vim'
[[plugins]]
repo = 'mhartington/oceanic-next'
[[plugins]]
repo = 'ayu-theme/ayu-vim'
[[plugins]]
repo = 'christianchiarulli/nvcode-color-schemes.vim'

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
hook_add = '''
source ~/.config/nvim/plugins/coc.rc.vim
'''

[[plugins]]
repo = 'ekalinin/Dockerfile.vim'
hook_add = '''
'''

[[plugins]]
repo = 'kyazdani42/nvim-tree.lua'
hook_add = '''
nnoremap <C-n> :NvimTreeToggle<CR>
let g:nvim_tree_ignore = [ '.git', 'node_modules', '.cache' ]
'''

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'previm/previm'
hook_add = '''
let g:previm_open_cmd = 'open'
'''

[[plugins]]
# highlight match
repo = 'itchyny/vim-parenmatch'

[[plugins]]
# auto insert pairs
repo = 'jiangmiao/auto-pairs'

[[plugins]]
# quoting/parenthesizeing made simple
repo = 'tpope/vim-surround'
# 'Hello world!'
# cs'<q>
# <q>Hello world!</q>
# cst'
# 'Hello world!'
# yss"
# "'Hello world!'"

[[plugins]]
repo = 'toml-lang/toml'

[[plugins]]
# syntax highlight
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'APZelos/blamer.nvim'
hook_add = '''
let g:blamer_enabled = 1
'''

[[plugins]]
repo = 'SirVer/ultisnips'
hook_add = '''
" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
" let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-j>" " jが下
let g:UltiSnipsJumpBackwardTrigger="<c-k>" " kが上
let g:UltiSnipsSnippetDirectories=[$HOME.'/.config/nvim/plugins/UltiSnips']
'''

# [[plugins]]
# repo = 'JuliaEditorSupport/julia-vim'
# hook_add = '''
# " juliaの設定
# autocmd BufRead,BufNewFile *.jl set filetype=julia
# '''
[[plugins]]
repo = 'dart-lang/dart-vim-plugin'

[[plugins]]
# coqのライブラリ
repo = 'LumaKernel/coqpit.vim'
hook_add = '''
function! MyCoqMaps()
  nnoremap <silent> <C-C>        :CoqLaunch<CR>
  nnoremap <silent> <Leader>j    :CoqNext<CR>
  nnoremap <silent> <Leader>k    :CoqBack<CR>
  nnoremap <silent> <Leader>l    :CoqToCursor<CR>
  nnoremap <silent> <Leader>G    :CoqToLast<CR>
  nnoremap <silent> <Leader>g    :CoqRerun<CR>
  nnoremap <silent> <Leader>t    :MoveToTop<CR>
  nnoremap <silent> <Leader><F5> :CoqRefresh<CR>

  nnoremap <Leader>compute :CoqQuery Compute .<Left>
  nnoremap <Leader>print :CoqQuery Print .<Left>
  nnoremap <Leader>check :CoqQuery Check .<Left>
  nnoremap <Leader>se :CoqQuery Search ().<Left><Left>
endfunction

augroup my_coq
  au!
  au FileType coq :call MyCoqMaps()
augroup END
'''

[[plugins]]
repo = 'nicwest/vim-camelsnek'
hook_add = '''
" Some organisations use the terms camel and pascal to differentiate between
" the two variants of camel case. This setting changes the commands:
" :Camel  -> :Pascal
" :CamelB -> :Camel
let g:camelsnek_alternative_camel_commands = 1
" let g:camelsnek_i_am_an_old_fart_with_no_sense_of_humour_or_internet_culture = 0
'''

# 使いこなせない
# [[plugins]]
# repo = 'mg979/vim-visual-multi'
# hook_add = '''
# nnoremap <leader>mm <Plug>(VM-Mouse-Cursor)
# '''

[[plugins]]
repo = 'caenrique/nvim-toggle-terminal'
hook_add= '''
nnoremap <silent> <leader>tt :ToggleTerminal<Enter>
tnoremap <silent> <C-[> <C-\><C-n>:ToggleTerminal<Enter>
'''

[[plugins]]
repo = 'preservim/tagbar'
hook_add = '''
nnoremap <leader>t :TagbarToggle<CR>
'''

[[plugins]]
repo = 'nvim-lua/popup.nvim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
hook_add = """
lua << EOF
local actions = require('telescope.actions')
require('telescope').setup{
  defaults = {
    mappings = {
      i = {
        -- ["<TAB>"] = actions.select_tab,
      },
      n = {
        -- ["<TAB>"] = actions.select_tab,
      },
    },
  },
}
EOF
""EOF
nnoremap <leader>f <cmd>Telescope find_files<cr>
nnoremap <leader>g <cmd>Telescope live_grep<cr>
"""

[[plugins]]
repo = 'windwp/nvim-spectre'
hook_add = '''
nnoremap <leader>s :lua require('spectre').open()<CR>
'''

[[plugins]]
repo = 'jparise/vim-graphql'
hook_add = """
augroup vim-graphql
  autocmd BufNewFile,BufRead *.prisma setfiletype graphql
augroup END
"""

[[plugins]]
repo = 'glepnir/galaxyline.nvim'
hook_add = """
"""

[[plugins]]
repo ='kyazdani42/nvim-web-devicons'

[[plugins]]
repo = 'romgrk/barbar.nvim'
hook_add = """
nnoremap <C-h> :BufferPrevious<CR>
nnoremap <C-l> :BufferNext<CR>
nnoremap <C-b>p :BufferPick<CR>
nnoremap <C-b>s :BufferOrderByDirectory<CR>
nnoremap <C-b>d :BufferClose<CR>
nnoremap <C-b>h :BufferMovePrevious<CR>
nnoremap <C-b>l :BufferMoveNext<CR>
" Control+Shiftがterminal上だとうまく動かないらしい
" nnoremap <C-S-l> :+tabmove<CR>
" nnoremap <C-S-h> :-tabmove<CR>
"""

[[plugins]]
repo = 'gelguy/wilder.nvim'
hook_add = """
call wilder#enable_cmdline_enter()
set wildcharm=<Tab>
call wilder#set_option('modes', ['/', '?', ':'])
cmap <expr> <Tab> wilder#in_context() ? wilder#next() : "\<Tab>"
cmap <expr> <S-Tab> wilder#in_context() ? wilder#previous() : "\<S-Tab>"
call wilder#set_option('pipeline', [
      \   wilder#branch(
      \     wilder#cmdline_pipeline({
      \       'fuzzy': 1,
      \       'use_python': 1,
      \     }),
      \     wilder#python_search_pipeline({
      \       'pattern': wilder#python_fuzzy_pattern(),
      \       'sorter': wilder#python_difflib_sorter(),
      \       'engine': 're',
      \     }),
      \   ),
      \ ])
"""

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_add = """
lua <<EOF
require'nvim-treesitter.configs'.setup {
  ensure_installed = "maintained", -- one of "all", "maintained" (parsers with maintainers), or a list of languages
  highlight = {
    enable = true,              -- false will disable the whole extension
    disable = { },  -- list of language that will be disabled
  },
}
EOF
"""

[[plugins]]
repo = 'folke/todo-comments.nvim'

# なんか保存するときに遅くなるのでdisable
[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'

[[plugins]]
repo = 'elixir-editors/vim-elixir'

[[plugins]]
repo = 'rcarriga/nvim-notify'

[[plugins]]
# 若干重くなる
repo = 'yamatsum/nvim-cursorline'

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'

