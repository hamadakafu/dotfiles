[[plugins]]
repo = 'Shougo/context_filetype.vim'

# カラースキーマ
[[plugins]]
repo = 'morhetz/gruvbox'
[[plugins]]
repo = 'ulwlu/elly.vim'
[[plugins]]
repo = 'sainnhe/everforest'
[[plugins]]
repo = 'rakr/vim-one'
[[plugins]]
repo = 'arcticicestudio/nord-vim'
[[plugins]]
repo = 'mhartington/oceanic-next'
[[plugins]]
repo = 'ayu-theme/ayu-vim'
[[plugins]]
repo = 'christianchiarulli/nvcode-color-schemes.vim'
[[plugins]]
repo = 'folke/tokyonight.nvim'
[[plugins]]
repo = 'Rigellute/rigel'
[[plugins]]
repo = 'overcache/NeoSolarized'
[[plugins]]
repo = 'tomasr/molokai'
[[plugins]]
repo = 'NLKNguyen/papercolor-theme'
[[plugins]]
repo = 'sainnhe/gruvbox-material'
[[plugins]]
repo = 'relastle/bluewery.vim'

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
hook_add = '''
source ~/.config/nvim/plugins/coc.rc.vim
'''

[[plugins]]
repo = 'kyazdani42/nvim-tree.lua'
hook_add = '''
lua require('plugins/nvim-tree')
nnoremap <silent> <C-n> :NvimTreeRefresh<CR>:NvimTreeToggle<CR>
'''

[[plugins]]
repo = 'previm/previm'
hook_add = '''
let g:previm_open_cmd = 'open'
'''

[[plugins]]
# highlight match
repo = 'itchyny/vim-parenmatch'

[[plugins]]
# auto insert pairs
repo = 'jiangmiao/auto-pairs'

[[plugins]]
# quoting/parenthesizeing made simple
repo = 'tpope/vim-surround'
# 'Hello world!'
# cs'<q>
# <q>Hello world!</q>
# cst'
# 'Hello world!'
# yss"
# "'Hello world!'"

[[plugins]]
repo = 'APZelos/blamer.nvim'
hook_add = '''
let g:blamer_enabled = 1
let g:blamer_show_in_insert_modes = 0
let g:blamer_relative_time = 1
let g:blamer_date_format = '%y/%m/%d %H:%M'
let g:blamer_template = '[<committer> <committer-time>] <summary>'
'''

[[plugins]]
repo = 'SirVer/ultisnips'
hook_add = '''
" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
" let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-j>" " jが下
let g:UltiSnipsJumpBackwardTrigger="<c-k>" " kが上
let g:UltiSnipsSnippetDirectories=["~/.config/nvim/plugins/UltiSnips"]
'''

# 使いこなせない
# [[plugins]]
# repo = 'nicwest/vim-camelsnek'
# hook_add = '''
# " Some organisations use the terms camel and pascal to differentiate between
# " the two variants of camel case. This setting changes the commands:
# " :Camel  -> :Pascal
# " :CamelB -> :Camel
# let g:camelsnek_alternative_camel_commands = 1
# " let g:camelsnek_i_am_an_old_fart_with_no_sense_of_humour_or_internet_culture = 0
# '''

# 使いこなせない
# [[plugins]]
# repo = 'mg979/vim-visual-multi'
# hook_add = '''
# nnoremap <leader>mm <Plug>(VM-Mouse-Cursor)
# '''

# [[plugins]]
# repo = 'caenrique/nvim-toggle-terminal'
# hook_add= '''
# nnoremap <silent> <leader>tt :ToggleTerminal<Enter>
# tnoremap <silent> <C-[> <C-\><C-n>:ToggleTerminal<Enter>
# '''

[[plugins]]
repo = 'preservim/tagbar'
hook_add = '''
let g:tagbar_ctags_bin = 'ctags-universal'
nnoremap <leader>t :TagbarToggle<CR>
'''

[[plugins]]
repo = 'nvim-lua/popup.nvim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
hook_add = """
lua require('plugins/telescope')
"""

[[plugins]]
repo = 'windwp/nvim-spectre'
hook_add = '''
lua require('plugins/spectre')
nnoremap <leader>s :lua require('spectre').open()<CR>
'''

[[plugins]]
repo = 'jparise/vim-graphql'
hook_add = """
augroup vim-graphql
  autocmd BufNewFile,BufRead *.prisma setfiletype graphql
augroup END
"""

[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
hook_add = """
lua require('plugins/lualine')
"""

[[plugins]]
repo ='kyazdani42/nvim-web-devicons'

[[plugins]]
repo = 'romgrk/barbar.nvim'
hook_add = """
nnoremap <C-w>  :BufferClose<CR>
nnoremap <C-b>p :BufferPick<CR>
nnoremap <C-b>s :BufferOrderByDirectory<CR>
nnoremap <C-b>h :BufferMovePrevious<CR>
nnoremap <C-b>l :BufferMoveNext<CR>
" Control+Shiftをtemrinal側でneovimがわかるように変換してあげる必要がある
" alacrittyでkeymappingを設定する
" さらにcontrol tabはterminfoとか言うので面倒くさい
nnoremap <C-Tab> :BufferNext<CR>
nnoremap <C-S-Tab> :BufferPrevious<CR>
"""

[[plugins]]
repo = 'gelguy/wilder.nvim'
hook_add = """
call wilder#enable_cmdline_enter()
set wildcharm=<Tab>
call wilder#set_option('modes', ['/', '?', ':'])
cmap <expr> <Tab> wilder#in_context() ? wilder#next() : "\<Tab>"
cmap <expr> <S-Tab> wilder#in_context() ? wilder#previous() : "\<S-Tab>"
cmap <expr> <c-n> wilder#in_context() ? wilder#next() : "\<c-n>"
cmap <expr> <c-p> wilder#in_context() ? wilder#previous() : "\<c-p>"
call wilder#set_option('pipeline', [
      \   wilder#branch(
      \     wilder#cmdline_pipeline({
      \       'fuzzy': 1,
      \       'use_python': 1,
      \     }),
      \     wilder#python_search_pipeline({
      \       'pattern': wilder#python_fuzzy_pattern(),
      \       'sorter': wilder#python_difflib_sorter(),
      \       'engine': 're',
      \     }),
      \   ),
      \ ])
call wilder#set_option('renderer', wilder#popupmenu_renderer(wilder#popupmenu_border_theme({
      \ 'highlights': {
      \   'border': 'Normal',
      \ },
      \ 'border': 'rounded',
      \ })))
"""

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_add = """
lua require('plugins/nvim-treesitter')
"""

[[plugins]]
repo = 'folke/todo-comments.nvim'
hook_add = """
lua require('plugins/todo-comments')
"""

[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'

[[plugins]]
repo = 'rcarriga/nvim-notify'
hook_add = """
lua require('plugins/notify')
"""

# 若干重くなる
# there is bug
# [[plugins]]
# repo = 'yamatsum/nvim-cursorline'

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
rev = 'v*'
hook_add = """
lua require('plugins/gitsigns')
"""

# [[plugins]]
# repo = 'github/copilot.vim'
# hook_add = """
# inoremap <silent><script><expr> <c-l> copilot#Accept("\\<CR>")
# let g:copilot_no_tab_map = v:true
# """

[[plugins]]
repo = 'petertriho/nvim-scrollbar'
hook_add = """
lua require('plugins/scrollbar')
"""
