# docker build -t sample-cpp -f Dockerfile.cpp.dev .
# docker run -i -t -v `pwd`:/app -p 8888:8888 --name sample-cpp.dev sample-cpp

FROM ubuntu

ENV DEBIAN_FRONTEND=noninteractive

RUN apt update && apt upgrade -y

RUN apt install -y locales && locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

RUN apt install -y \
	git build-essential \
	ninja-build gettext libtool-bin cmake g++ pkg-config unzip curl

# neovim
RUN git clone https://github.com/neovim/neovim /neovim
WORKDIR /neovim
RUN git checkout stable \
	&& make CMAKE_BUILD_TYPE=RelWithDebInfo \
	&& make install

# neovim -> dein
RUN curl -fsSL https://raw.githubusercontent.com/Shougo/dein-installer.vim/master/installer.sh > /installer.sh \
	&& sed -i 's#^BASE=none$#BASE=~/.cache/dein#' /installer.sh \
	&& sed -i 's#^DEIN=none$#DEIN=~/.cache/dein/repos/github.com/Shougo/dein.vim#' /installer.sh \
	&& sed -i 's#^CONFIG_FILENAME=none$#CONFIG_FILENAME=init.vim#' /installer.sh \
	&& sed -i 's#^CONFIG_LOCATION=none$#CONFIG_LOCATION=~/.config/nvim#' /installer.sh \
	&& sh /installer.sh \
  && rm /installer.sh

RUN apt install -y python3 python3-pip pipx \
  && pip install neovim

RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash - \
	&& apt update && apt install -y nodejs && npm install -g neovim

# hamadakafu/dotfiles
RUN git clone https://github.com/hamadakafu/dotfiles /dotfiles
RUN mkdir -p ~/.config \
	&& rm -rf ~/.config/nvim \
	&& ln -s /dotfiles/.config/nvim ~/.config

# 初回起動
RUN nvim --headless +'UpdateRemotePlugin | exit'

WORKDIR /app
